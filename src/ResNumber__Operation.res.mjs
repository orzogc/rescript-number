// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as PervasivesU from "rescript/lib/es6/pervasivesU.js";

function MakeNumberSum(Add) {
  var sum = function (arr) {
    if (arr.length !== 0) {
      var _sum = arr[0];
      var _i = 1;
      while(true) {
        var i = _i;
        var sum$1 = _sum;
        var n = Belt_Array.get(arr, i);
        if (n === undefined) {
          return Caml_option.some(sum$1);
        }
        var s = Add.add(sum$1, Caml_option.valFromOption(n));
        if (s === undefined) {
          return ;
        }
        _i = i + 1 | 0;
        _sum = Caml_option.valFromOption(s);
        continue ;
      };
    }
    
  };
  var sumExn = function (arr) {
    var len = arr.length;
    if (len <= 0) {
      return PervasivesU.invalid_arg("the array is empty");
    }
    var s = arr[0];
    for(var i = 1; i < len; ++i){
      s = Add.addExn(s, arr[i]);
    }
    return s;
  };
  var sumUnsafe = function (arr) {
    var s = arr[0];
    for(var i = 1 ,i_finish = arr.length; i < i_finish; ++i){
      s = Add.addUnsafe(s, arr[i]);
    }
    return s;
  };
  return {
          sum: sum,
          sumExn: sumExn,
          sumUnsafe: sumUnsafe
        };
}

export {
  MakeNumberSum ,
}
/* No side effect */
